๐ง ุงูุชุนุฏููุงุช ุงููุทููุจุฉ:
1. ุฅุฒุงูุฉ ุงุณู ุงููุนุจุฉ ูู ุงููููุฐุฌ:
ูุญุฐู ูุฐุง ุงูุฌุฒุก ููุงุฆููุง ูู formSchema ููุงุฌูุฉ ุงููุณุชุฎุฏู.

ููููุดุฆ ุงุณู ุงููุนุจุฉ ุชููุงุฆููุง ุฏุงุฎู onSubmit ุจุฏููุง ูู ุฅุฏุฎุงูู ูุฏูููุง.

2. ุชูููุต ุญุฌู ุงูููุฏุงู:
ุงุณุชุฎุฏู max-w-sm ุจุฏู max-w-md ูุน w-full ู p-4 ุฏุงุฎู DialogContent.

3. ุชุญุณูู ุธููุฑ ุงูุฒุฑ ุนูู ุงูุฌูุงู:
ุชุฃูุฏ ุฃู DialogFooter ุฏุงุฎู ุงููููุฐุฌ ููุณูุ ูููุณ ููุท ูู ุทุฑู ุงูุตูุญุฉ.

โจ ุงููุณุฎุฉ ุงููุนุฏูุฉ ูู ReplayGameModal:
tsx
Copy
Edit
<Dialog open={open} onOpenChange={onOpenChange}>
  <DialogContent className="w-full max-w-sm sm:rounded-lg p-4" dir="rtl">
    <DialogHeader>
      <DialogTitle className="text-xl font-bold text-center">ุฅุนุงุฏุฉ ุงููุนุจ</DialogTitle>
      <DialogDescription className="text-center">
        ุฃุฏุฎู ุฃุณูุงุก ุงููุฑู ููุทุ ูุณูุชู ุงุณุชุฎุฏุงู ููุณ ุงููุฆุงุช ูุงูุฃุณุฆูุฉ ุงูุณุงุจูุฉ.
      </DialogDescription>
    </DialogHeader>

    {/* ุงููุฆุงุช */}
    <div className="flex flex-wrap justify-center gap-2 my-3">
      {game.categories.map((category) => (
        <Badge key={category.id} className="bg-blue-100 text-blue-800 hover:bg-blue-200 rounded-full border-0">
          <span className="mr-1">{category.icon}</span>
          {category.name}
        </Badge>
      ))}
    </div>

    {formError && (
      <Alert variant="destructive" className="mb-4">
        <AlertCircle className="h-4 w-4 ml-2" />
        <AlertDescription>{formError}</AlertDescription>
      </Alert>
    )}

    <Form {...form}>
      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
        {/* ููุท ุฃุณูุงุก ุงููุฑู */}
        <div className="space-y-2 border border-gray-200 rounded-md p-3 bg-gray-50">
          <div className="flex justify-between items-center mb-2">
            <h3 className="text-sm font-medium text-gray-700">ุฃุณูุงุก ุงููุฑู</h3>
            <Badge variant="outline" className="bg-blue-50">
              <Users className="h-3 w-3 mr-1" />
              {game.teamsCount} ูุฑู
            </Badge>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            {Array.from({ length: game.teamsCount }).map((_, index) => (
              <FormField
                key={index}
                control={form.control}
                name={`teamNames.${index}`}
                render={({ field }) => (
                  <FormItem className="space-y-1">
                    <FormLabel className="text-xs text-gray-600">ุงููุฑูู {index + 1}</FormLabel>
                    <FormControl>
                      <Input
                        placeholder={`ุงุณู ุงููุฑูู ${index + 1}`}
                        maxLength={45}
                        {...field}
                      />
                    </FormControl>
                    <FormMessage className="text-xs" />
                  </FormItem>
                )}
              />
            ))}
          </div>
        </div>

        {/* ุฃููุงุช ุงูุฅุฌุงุจุฉ */}
        <div className="space-y-2 border border-gray-200 rounded-md p-3 bg-gray-50">
          <div className="flex justify-between items-center mb-2">
            <h3 className="text-sm font-medium text-gray-700">ุฃููุงุช ุงูุฅุฌุงุจุฉ</h3>
            <Badge variant="outline" className="bg-blue-50">
              <Clock className="h-3 w-3 mr-1" />
              ููุณ ุงููุฆุงุช
            </Badge>
          </div>

          {/* ููุช ุงูุฅุฌุงุจุฉ ุงูุฃููู */}
          <FormField
            control={form.control}
            name="answerTimeFirst"
            render={({ field }) => (
              <FormItem>
                <FormLabel>ููุช ุงูุฅุฌุงุจุฉ ุงูุฃููู (ุซุงููุฉ)</FormLabel>
                <Select onValueChange={field.onChange} defaultValue={field.value}>
                  <FormControl>
                    <SelectTrigger>
                      <SelectValue placeholder="ุงุฎุชุฑ ููุช ุงูุฅุฌุงุจุฉ ุงูุฃููู" />
                    </SelectTrigger>
                  </FormControl>
                  <SelectContent>
                    {[15, 30, 45, 60].map((time) => (
                      <SelectItem key={time} value={time.toString()}>
                        {time} ุซุงููุฉ
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
                <FormMessage />
              </FormItem>
            )}
          />

          {/* ููุช ุงูุฅุฌุงุจุฉ ุงูุซุงููุฉ */}
          <FormField
            control={form.control}
            name="answerTimeSecond"
            render={({ field }) => (
              <FormItem>
                <FormLabel>ููุช ุงูุฅุฌุงุจุฉ ุงูุซุงููุฉ (ุซุงููุฉ)</FormLabel>
                <Select onValueChange={field.onChange} defaultValue={field.value}>
                  <FormControl>
                    <SelectTrigger>
                      <SelectValue placeholder="ุงุฎุชุฑ ููุช ุงูุฅุฌุงุจุฉ ุงูุซุงููุฉ" />
                    </SelectTrigger>
                  </FormControl>
                  <SelectContent>
                    {[10, 15, 20, 30].map((time) => (
                      <SelectItem key={time} value={time.toString()}>
                        {time} ุซุงููุฉ
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
                <FormMessage />
              </FormItem>
            )}
          />
        </div>

        {/* ุงูุฃุฒุฑุงุฑ */}
        <DialogFooter className="flex justify-between mt-4">
          <Button type="button" variant="outline" onClick={() => onOpenChange(false)}>
            ุฅูุบุงุก
          </Button>
          <Button type="submit" disabled={loading} className="bg-green-600 hover:bg-green-700 text-white">
            {loading ? 'ุฌุงุฑู ุงูุฅูุดุงุก...' : 'ุจุฏุก ุงููุนุจุฉ'}
          </Button>
        </DialogFooter>
      </form>
    </Form>
  </DialogContent>
</Dialog>
โ ูุง ุชูุณู ุชุนุฏูู ุฏุงูุฉ onSubmit ูุชูููุฏ ุงุณู ุงููุนุจุฉ ุชููุงุฆููุง:
ts
Copy
Edit
const replayData = {
  originalGameId: game.id,
  gameName: `${game.name} (ุฅุนุงุฏุฉ)`, // ุงุณู ุชููุงุฆู ุฏุงุฎูู
  teamNames: values.teamNames,
  answerTimeFirst: parseInt(values.answerTimeFirst),
  answerTimeSecond: parseInt(values.answerTimeSecond),
};
